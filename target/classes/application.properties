# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:postgresql://dxubwsrddjsybn:0b7de7a122d3c39b9103378d2fe8034b6491786dd3bb13df4ecfb02534dcb12d@ec2-3-222-150-253.compute-1.amazonaws.com:5432/d6rog83davvqq0
# Username and password
spring.datasource.username = dxubwsrddjsybn
spring.datasource.password = 0b7de7a122d3c39b9103378d2fe8034b6491786dd3bb13df4ecfb02534dcb12d
#spring.datasource.url = jdbc:mysql://localhost:3306/huonggiangfrit
## Username and password
#spring.datasource.username = root
#spring.datasource.password = rinkute12345
# files storage location (stores all files uploaded via REST API)
#storage.location=static/upload
# Charset of HTTP requests and responses. Added to the "Content-Type"
#header if
#not set explicitly.
server.servlet.encoding.charset=UTF-8
# Enable http encoding support.
server.servlet.encoding.enabled=true
# Force the encoding to the configured charset on HTTP requests and responses.
server.servlet.encoding.force=true

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect



